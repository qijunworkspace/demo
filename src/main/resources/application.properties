#设置系统地址及端口
#server.address=
server.port=80
#设置服务器
server.servlet.context-path=/

#Spring-session设置，以下无效
#server.servlet.session.cookie.http-only=true
#server.session.tracking-modes=cookie
#server.session.cookie.max-age=3600
#server.session.cookie.name=MySessionCookie
#server端 session的过期时间
#server.session.timeout=10*60
#server.error.path=/error


#mybatis分页设置
# 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库
# 5.0以后自动识别数据库
pagehelper.helper-dialect=Mysql
# 默认值为false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为true时，使用 RowBounds 分页会进行 count 查询。
pagehelper.row-bounds-with-count=true
# reasonable:value=true时，pageNum小于1会查询第一页，如果pageNum大于pageSize会查询最后一页
pagehelper.reasonable=true
#  默认值为 false。设置为 true 时，允许在运行时根据多数据源自动识别对应方言的分页。
#  如果你在 Spring 中配置了动态数据源，并且连接不同类型的数据库，这时你可以配置 autoRuntimeDialect 为 true
pagehelper.auto-runtime-dialect=false
# 默认值为 false，该参数对使用 RowBounds 作为分页参数时有效。 当该参数设置为 true 时，会将 RowBounds 中的 offset 参数当成 pageNum 使用，可以用页码和页面大小两个参数进行分页。
# pagehelper.offset-as-page-num=false
# 默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）
# pagehelper.page-size-zero=false


#设置Spring-Session
#使用@EnableRedisHttpSession
spring.session.store-type=redis
spring.session.redis.namespace=spring:session
#先保存到内部的HashMap,服务请求结束再保存到redis
#如果需要立即保存,改为immediate
spring.session.redis.flush-mode=on_save
#spring.session.redis.cleanup-cron=

#设置https SSL服务


#Tomcat配置
server.tomcat.max-connections=300
#最大连接满后 能够缓存请求的最大个数
server.tomcat.accept-count=100
server.tomcat.max-http-post-size=10MB
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.uri-encoding=UTF-8


###### Spring容器配置
#运行环境配置 dev/prod/test
spring.profiles.active=dev
spring.application.name=demo


#配置Actuator监控, 不同的端口存在权限问题
management.server.port=8001
management.endpoint.sessions.enabled=false
#management.server.address=127.0.0.1
management.endpoints.enabled-by-default=true
management.endpoints.web.base-path=/actuator
#By default, all endpoints except for shutdown are enabled(JMX)
#web下默认只有health和info
#management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.include= health,info,env,trace,beans,metrics
##限定访问IP
#management.endpoints.web.cors.allowed-origins=http://example.com
management.endpoints.web.cors.allowed-methods=GET,POST
#management.endpoints.web.exposure.exclude=["",""]
management.endpoint.shutdown.enabled=true


#文件上传配置
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.max-file-size=10MB
#临时文件目录
#spring.servlet.multipart.location=

#设置json转换属性
spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

#静态文件 url 匹配路径
spring.mvc.static-path-pattern=/static/**
spring.mvc.favicon.enabled=true
#springboot 默认使用Jackson实现JSON的序列化和反序列化
spring.mvc.date-format=yyyy-MM-dd HH:mm:ss
spring.mvc.locale=zh_CN
#spring.mvc.view.prefix=
#spring.mvc.view.suffix=


#静态资源存储位置
demo.upload.path=/home/demo/
#默认情况下，Spring Boot 的静态文件加载顺序是  META/resources > resources > static > public
spring.resources.static-locations=classpath:/static,classpath:/templates,classpath:/public,classpath:/resources,classpath:/META-INF/resources,file:${demo.upload.path}
#静态资源缓存设置
spring.resources.add-mappings=true
spring.resources.cache.cachecontrol.cache-public=true
# Maximum time the response should be cached, in seconds if no duration suffix is not specified.
spring.resources.cache.cachecontrol.max-age=36000s
#Cache period for the resources served by the resource handler. If a duration suffix is not specified, seconds will be used.
spring.resources.cache.period=36000s
spring.resources.chain.cache=true
# Whether to enable the Spring Resource Handling chain. By default, disabled unless at least one strategy has been enabled.
spring.resources.chain.enabled=false 
# Whether to enable the content Version Strategy.
spring.resources.chain.strategy.content.enabled=false
# Comma-separated list of patterns to apply to the content Version Strategy.
spring.resources.chain.strategy.content.paths=${spring.mvc.static-path-pattern}


#模板设置
spring.thymeleaf.mode=HTML
spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8
#模板存储路径（默认值）
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#数据映射配置,类似openSessionInView
#使用JPA方式时使用
spring.jpa.open-in-view=false
#none、validate、update、create和create-drop
#是hibernate.hbm2ddl.auto属性的一个快捷方式
#spring.jpa.hibernate.ddl-auto=none


#设置mybatis环境：用于生成SqlSessionFactory
mybatis.config-location=classpath:/config/mybatis-config.xml
mybatis.executor-type=reuse
mybatis.mapper-locations=classpath*:mybatis/*.xml
mybatis.type-aliases-package=com.qijun.demo.model


#热部署配置 - 导致redis存储和取出来的对象类所属的ClassLoader不一致，报ClassCastException
spring.devtools.restart.exclude=/static/**
spring.devtools.restart.trigger-file=.trigger

#Elasticsearch 配置(Springboot自动配置)
#spring.data.elasticsearch.repositories.enabled=true
#spring.data.elasticsearch.cluster-name=es-comm
#spring.data.elasticsearch.cluster-nodes=192.168.245.3:9900,192.168.245.3:9901,192.168.245.4:9900,192.168.245.4:9901
#spring.data.elasticsearch.properties.client.transport.sniff=true
#spring.data.elasticsearch.properties.client.transport.ping_timeout=5s
#spring.data.elasticsearch.properties.client.transport.nodes_sampler_interval=5s






